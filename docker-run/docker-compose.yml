version: '3'
#volumes:
#    - shared:/home/ngnms/NGNMS/Shared
#    - routerconf:/home/ngnms/NGREADY/Shared/data/rtconfig
services:

#    data_container:
#        image:  ngnms-core
#        user: ngnms
#        build:
#          context: ./build/core
#          args:
#            - ngnms_gid=${NGNMS_UID}
#            - ngnms_uid=${NGNMS_UID}
#        volumes:
#            - /home/ngnms/NGNMS/Shared:/home/ngnms/NGREADY/Shared:rw
#            - /home/ngnms/NGNMS/Shared/data/rtconfig:/home/ngnms/NGREADY/data/rtconfig:rw
#        command: echo 'container created'
#      #uncomment containder below if you want to use diockerized Postgres
#    psql:
#        image: postgres:9.3.11
#        ports:
#            - "5432:5432"
#        volumes:
#            -  database_init:/docker-entrypoint-initdb.d
#        environment:
#            POSTGRES_PASSWORD: optoss
#            POSTGRES_USER: ngnms
#            POSTGRES_DB: test
    core:
        image: ngnms-core
        user: root
        build:
          context: ./build/core
          args:
            - ngnms_gid=${NGNMS_UID}
            - ngnms_uid=${NGNMS_UID}
        network_mode: "host"
        env_file:
            - env.list
        volumes:
#            - /home/ngnms/NGREADY:/home/ngnms/NGREADY:rw
            - ${NGNMS_LOCAL_SHARE}:/home/ngnms/NGREADY/Shared:rw
            - ${NGNMS_LOCAL_SHARE}/data/rtconfig:/home/ngnms/NGREADY/data/rtconfig:rw
         #uncomment lines below if you want to use dockerized Postgres , edit env.list accourdingly
    web:
#        ports:
#              - "80:80"
        network_mode: "host"
        image: vladzaitsev/ngnms-web:3.5b2
        volumes:
            - ./web/conf:/var/www/custom_config:ro
            - ${NGNMS_LOCAL_SHARE}/logs:/home/ngnms/NGREADY/Shared:rw
        env_file:
            - env.list
#        #uncomment lines below if you want to use dockerized Postgres, edit env.list accourdingly
#        depends_on:
#            - psql
