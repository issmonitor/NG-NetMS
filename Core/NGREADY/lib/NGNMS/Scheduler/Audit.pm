package NGNMS::Scheduler::Audit;

use strict;
use warnings FATAL => 'all';

use Moo;
use Config::Crontab;

use Emsgd qw/diag/;
with "NGNMS::Log4Role";
with "NGNMS::Scheduler::SchedulerRole";

has '+crontab_key' => (default => '## audit');
has '+exec_file' => (default => $ENV{NGNMS_HOME}."/bin/audit_run.sh");




sub schedule{
    my $self = shift;

    my $scanner = $self->DB->getSettings('scanner');
    my $schedule = $self->DB->getSettings('perioddiscovery');
    $self->logger->error("schedules does not configured in database") && return unless $schedule;
    $self->logger->error("Wrong period in database: '$schedule'") && return unless $schedule =~ /^[\s\d\*\-\/]+$/;
    $schedule =~ s/\s+/ /g;

    my $file_content = $self->compose_file($scanner);
    $self->update_file($file_content) || $self->logger->debug("file $self->{exec_file} requires no changes");
    $self->save($schedule)
        ? $self->logger->info("add new schedule for audit [$schedule]")
        : $self->logger->debug("audit schedule not changed, skip updating crontab")
    ;
}

sub compose_file {
    my $self = shift;
    my $do_scan = shift;
    my $scan_flag = $do_scan ? "-s" : "";
    my $debug_flag = defined( $ENV{NGNMS_DEBUG}) &&  $ENV{NGNMS_DEBUG} eq 'DEBUG' ? '-d' : '';
    my $s = <<"END_MESSAGE";
#!/bin/sh
# This script is used for scheduled audit runs
# It is invoked by Crontab accordingly to the user configuration
# Use Web/Gui to schedule periodic discovery.
# !!! DO NOT EDIT THIS FILE !!!
/usr/bin/perl $ENV{NGNMS_HOME}/bin/audit.pl  $debug_flag  $scan_flag -L $self->{dbhost} -D $self->{dbname} -U $self->{dbuser} -W $self->{dbpassword} -P $self->{dbport}
END_MESSAGE

    return $s;
}
1;
# ABSTRACT: This file is part of open source NG-NetMS tool.


